{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Admin\\\\Documents\\\\Rajesh\\\\Resturent-Details-main\\\\resturnt-details\\\\src\\\\components\\\\ResDet.jsx\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from \"react\";\nimport data from '../Data.json';\nimport { nanoid } from \"nanoid\";\nimport ResCard from \"./ResCard\";\nimport \"./ResDet.css\";\nimport SortNav from \"./Nav\";\nimport InputForm from \"./AddHotel\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst RestaurantDetails = () => {\n  _s();\n\n  const [Game, setData] = useState(data);\n  const [val, setVal] = useState(false);\n  const [forTwo, setForTwo] = useState(false);\n  const [count, setCount] = useState(1);\n\n  const getFormData = form => {\n    setData([...Game, form]);\n  };\n\n  const getData = curData => {\n    setData([...curData]);\n    Pagination([...curData], count);\n  };\n\n  const l2h = () => {\n    let newData = Game.sort((a, b) => parseFloat(a.rating) - parseFloat(b.rating));\n    setData([...newData]);\n    Pagination(newData, count);\n  };\n\n  const h2l = () => {\n    let newData = Game.sort((a, b) => parseFloat(b.rating) - parseFloat(a.rating));\n    setData([...newData]);\n    Pagination(newData, count);\n  };\n\n  const Cash = data => {\n    let cashData = data.filter(el => el.payment_methods.cash === true).sort((a, b) => parseFloat(b.rating) - parseFloat(a.rating));\n    getData(cashData);\n    Pagination(cashData, count);\n  };\n\n  const Card = data => {\n    let cardData = data.filter(el => el.payment_methods.card === true).sort((a, b) => parseFloat(b.rating) - parseFloat(a.rating));\n    getData(cardData);\n    Pagination(cardData, count);\n  };\n\n  const All = data => {\n    let allData = data.filter(el => el.payment_methods.cash === true && el.payment_methods.card === true && el.payment_methods.upi === true).sort((a, b) => parseFloat(b.rating) - parseFloat(a.rating));\n    getData(allData);\n    Pagination(allData, count);\n  };\n\n  useEffect(() => {\n    Pagination(data, count);\n  }, [count]);\n\n  const Pagination = (data, count) => {\n    let pagData = data.filter((el, index) => {\n      if (count === 1 && index < 5) {\n        return el;\n      }\n\n      if (count === 2 && index < 10 && index > 4) {\n        return el;\n      }\n\n      if (count === 3 && index < 15 && index > 9) {\n        return el;\n      }\n\n      if (count === 4 && index < 20 && index > 14) {\n        return el;\n      }\n    });\n    setData([...pagData]); //console.log(pagData)\n  }; // Pagination(data,count)\n\n\n  return !val ? /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"searchNum\",\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: [Game.length, \" Restaurants Details\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 34\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(SortNav, {\n      getData: getData,\n      data: data\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"sort\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: l2h,\n          children: \"Low to High\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: h2l,\n          children: \"High to Low\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setVal(true),\n          children: \"Add Your Own RestaurantDetails\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"sort\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => {\n            setForTwo(true);\n            l2h();\n          },\n          children: \"Low to High For Two\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => {\n            setForTwo(true);\n            h2l();\n          },\n          children: \"High to Low For Two\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"sort\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => Cash(data),\n          children: \"Cash\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => Card(data),\n          children: \"Card\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => All(data),\n          children: \"All\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card-container\",\n      children: Game.map(el => /*#__PURE__*/_jsxDEV(ResCard, {\n        name: el.name,\n        cat: el.cat,\n        cost: el.cost,\n        rating: el.rating,\n        image: el.image,\n        min: el.min,\n        reviews: el.reviews,\n        time: el.time,\n        votes: el.votes,\n        forTwo: forTwo,\n        cost_for_two: el.cost_for_two\n      }, nanoid(), false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"sort\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => {\n          if (count > 1) {\n            setCount(count - 1);\n            Pagination(data, count);\n          }\n        },\n        children: \"Previous\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => {\n          setCount(count + 1);\n          Pagination(data, count);\n        },\n        children: \"Next\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true) : /*#__PURE__*/_jsxDEV(InputForm, {\n    getFormData: getFormData,\n    setVal: setVal\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 141,\n    columnNumber: 8\n  }, this);\n};\n\n_s(RestaurantDetails, \"xv6cRFKaGtTZd6FlZqU5uCbxUkc=\");\n\n_c = RestaurantDetails;\nexport default RestaurantDetails;\n\nvar _c;\n\n$RefreshReg$(_c, \"RestaurantDetails\");","map":{"version":3,"sources":["C:/Users/Admin/Documents/Rajesh/Resturent-Details-main/resturnt-details/src/components/ResDet.jsx"],"names":["useState","useEffect","data","nanoid","ResCard","SortNav","InputForm","RestaurantDetails","Game","setData","val","setVal","forTwo","setForTwo","count","setCount","getFormData","form","getData","curData","Pagination","l2h","newData","sort","a","b","parseFloat","rating","h2l","Cash","cashData","filter","el","payment_methods","cash","Card","cardData","card","All","allData","upi","pagData","index","length","map","name","cat","cost","image","min","reviews","time","votes","cost_for_two"],"mappings":";;;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAmC,OAAnC;AACA,OAAOC,IAAP,MAAiB,cAAjB;AACA,SAASC,MAAT,QAAuB,QAAvB;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAO,cAAP;AACA,OAAOC,OAAP,MAAoB,OAApB;AACA,OAAOC,SAAP,MAAsB,YAAtB;;;;AAEA,MAAMC,iBAAiB,GAAG,MAAM;AAAA;;AAC9B,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBT,QAAQ,CAACE,IAAD,CAAhC;AACA,QAAM,CAACQ,GAAD,EAAMC,MAAN,IAAgBX,QAAQ,CAAC,KAAD,CAA9B;AACA,QAAM,CAACY,MAAD,EAASC,SAAT,IAAsBb,QAAQ,CAAC,KAAD,CAApC;AACA,QAAM,CAACc,KAAD,EAAQC,QAAR,IAAoBf,QAAQ,CAAC,CAAD,CAAlC;;AAEA,QAAMgB,WAAW,GAAIC,IAAD,IAAU;AAC5BR,IAAAA,OAAO,CAAC,CAAC,GAAGD,IAAJ,EAAUS,IAAV,CAAD,CAAP;AAED,GAHD;;AAKA,QAAMC,OAAO,GAAIC,OAAD,IAAa;AAC3BV,IAAAA,OAAO,CAAC,CAAC,GAAGU,OAAJ,CAAD,CAAP;AACAC,IAAAA,UAAU,CAAC,CAAC,GAAGD,OAAJ,CAAD,EAAeL,KAAf,CAAV;AACD,GAHD;;AAKA,QAAMO,GAAG,GAAG,MAAM;AAChB,QAAIC,OAAO,GAAGd,IAAI,CAACe,IAAL,CACZ,CAACC,CAAD,EAAIC,CAAJ,KAAUC,UAAU,CAACF,CAAC,CAACG,MAAH,CAAV,GAAuBD,UAAU,CAACD,CAAC,CAACE,MAAH,CAD/B,CAAd;AAGAlB,IAAAA,OAAO,CAAC,CAAC,GAAGa,OAAJ,CAAD,CAAP;AACAF,IAAAA,UAAU,CAACE,OAAD,EAAUR,KAAV,CAAV;AACD,GAND;;AAQA,QAAMc,GAAG,GAAG,MAAM;AAChB,QAAIN,OAAO,GAAGd,IAAI,CAACe,IAAL,CACZ,CAACC,CAAD,EAAIC,CAAJ,KAAUC,UAAU,CAACD,CAAC,CAACE,MAAH,CAAV,GAAuBD,UAAU,CAACF,CAAC,CAACG,MAAH,CAD/B,CAAd;AAGAlB,IAAAA,OAAO,CAAC,CAAC,GAAGa,OAAJ,CAAD,CAAP;AACAF,IAAAA,UAAU,CAACE,OAAD,EAAUR,KAAV,CAAV;AACD,GAND;;AAQA,QAAMe,IAAI,GAAI3B,IAAD,IAAU;AACrB,QAAI4B,QAAQ,GAAG5B,IAAI,CAChB6B,MADY,CACJC,EAAD,IAAQA,EAAE,CAACC,eAAH,CAAmBC,IAAnB,KAA0B,IAD7B,EAEZX,IAFY,CAEP,CAACC,CAAD,EAAIC,CAAJ,KAAUC,UAAU,CAACD,CAAC,CAACE,MAAH,CAAV,GAAuBD,UAAU,CAACF,CAAC,CAACG,MAAH,CAFpC,CAAf;AAGAT,IAAAA,OAAO,CAACY,QAAD,CAAP;AACAV,IAAAA,UAAU,CAACU,QAAD,EAAWhB,KAAX,CAAV;AACD,GAND;;AAOA,QAAMqB,IAAI,GAAIjC,IAAD,IAAU;AACrB,QAAIkC,QAAQ,GAAGlC,IAAI,CAChB6B,MADY,CACJC,EAAD,IAAQA,EAAE,CAACC,eAAH,CAAmBI,IAAnB,KAA0B,IAD7B,EAEZd,IAFY,CAEP,CAACC,CAAD,EAAIC,CAAJ,KAAUC,UAAU,CAACD,CAAC,CAACE,MAAH,CAAV,GAAuBD,UAAU,CAACF,CAAC,CAACG,MAAH,CAFpC,CAAf;AAGAT,IAAAA,OAAO,CAACkB,QAAD,CAAP;AACAhB,IAAAA,UAAU,CAACgB,QAAD,EAAWtB,KAAX,CAAV;AACD,GAND;;AAOA,QAAMwB,GAAG,GAAIpC,IAAD,IAAU;AACpB,QAAIqC,OAAO,GAAGrC,IAAI,CACf6B,MADW,CACHC,EAAD,IAAQA,EAAE,CAACC,eAAH,CAAmBC,IAAnB,KAA0B,IAA1B,IAAkCF,EAAE,CAACC,eAAH,CAAmBI,IAAnB,KAA0B,IAA5D,IAAoEL,EAAE,CAACC,eAAH,CAAmBO,GAAnB,KAA2B,IADnG,EAEXjB,IAFW,CAEN,CAACC,CAAD,EAAIC,CAAJ,KAAUC,UAAU,CAACD,CAAC,CAACE,MAAH,CAAV,GAAuBD,UAAU,CAACF,CAAC,CAACG,MAAH,CAFrC,CAAd;AAGAT,IAAAA,OAAO,CAACqB,OAAD,CAAP;AACAnB,IAAAA,UAAU,CAACmB,OAAD,EAAUzB,KAAV,CAAV;AACD,GAND;;AAQEb,EAAAA,SAAS,CAAC,MAAM;AACdmB,IAAAA,UAAU,CAAClB,IAAD,EAAOY,KAAP,CAAV;AACD,GAFQ,EAEN,CAACA,KAAD,CAFM,CAAT;;AAIA,QAAMM,UAAU,GAAG,CAAClB,IAAD,EAAMY,KAAN,KAAgB;AACjC,QAAI2B,OAAO,GAAEvC,IAAI,CAAC6B,MAAL,CAAY,CAACC,EAAD,EAAKU,KAAL,KAAc;AACrC,UAAI5B,KAAK,KAAK,CAAV,IAAe4B,KAAK,GAAE,CAA1B,EAA6B;AAC3B,eAAOV,EAAP;AACD;;AACD,UAAIlB,KAAK,KAAK,CAAV,IAAe4B,KAAK,GAAG,EAAvB,IAA6BA,KAAK,GAAE,CAAxC,EAA2C;AACzC,eAAOV,EAAP;AACD;;AACD,UAAIlB,KAAK,KAAK,CAAV,IAAe4B,KAAK,GAAG,EAAvB,IAA6BA,KAAK,GAAC,CAAvC,EAA0C;AACxC,eAAOV,EAAP;AACD;;AACD,UAAIlB,KAAK,KAAK,CAAV,IAAe4B,KAAK,GAAG,EAAvB,IAA6BA,KAAK,GAAC,EAAvC,EAA2C;AACzC,eAAOV,EAAP;AACD;AAEF,KAdY,CAAb;AAeAvB,IAAAA,OAAO,CAAC,CAAC,GAAGgC,OAAJ,CAAD,CAAP,CAhBiC,CAiBjC;AACD,GAlBD,CA1D4B,CA+E/B;;;AACC,SAAQ,CAAC/B,GAAF,gBACL;AAAA,4BACE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA,6BAA2B;AAAA,mBAAKF,IAAI,CAACmC,MAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAA3B;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,OAAD;AAAS,MAAA,OAAO,EAAEzB,OAAlB;AAA2B,MAAA,IAAI,EAAEhB;AAAjC;AAAA;AAAA;AAAA;AAAA,YAFF,eAGE;AAAA,6BACE;AAAK,QAAA,SAAS,EAAC,MAAf;AAAA,gCACE;AAAQ,UAAA,OAAO,EAAEmB,GAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAQ,UAAA,OAAO,EAAEO,GAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF,eAGE;AAAQ,UAAA,OAAO,EAAE,MAAMjB,MAAM,CAAC,IAAD,CAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAHF,eAUE;AAAA,6BACE;AAAK,QAAA,SAAS,EAAC,MAAf;AAAA,gCACE;AAAQ,UAAA,OAAO,EAAE,MAAM;AAAEE,YAAAA,SAAS,CAAC,IAAD,CAAT;AAAgBQ,YAAAA,GAAG;AAAK,WAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAQ,UAAA,OAAO,EAAE,MAAM;AAAER,YAAAA,SAAS,CAAC,IAAD,CAAT;AAAgBe,YAAAA,GAAG;AAAK,WAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAVF,eAgBE;AAAA,6BACE;AAAK,QAAA,SAAS,EAAC,MAAf;AAAA,gCACE;AAAQ,UAAA,OAAO,EAAE,MAAIC,IAAI,CAAC3B,IAAD,CAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAQ,UAAA,OAAO,EAAE,MAAIiC,IAAI,CAACjC,IAAD,CAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF,eAGE;AAAQ,UAAA,OAAO,EAAE,MAAIoC,GAAG,CAACpC,IAAD,CAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAhBF,eAuBE;AAAK,MAAA,SAAS,EAAC,gBAAf;AAAA,gBACGM,IAAI,CAACoC,GAAL,CAAUZ,EAAD,iBACR,QAAC,OAAD;AAEE,QAAA,IAAI,EAAEA,EAAE,CAACa,IAFX;AAGE,QAAA,GAAG,EAAEb,EAAE,CAACc,GAHV;AAIE,QAAA,IAAI,EAAEd,EAAE,CAACe,IAJX;AAKE,QAAA,MAAM,EAAEf,EAAE,CAACL,MALb;AAME,QAAA,KAAK,EAAEK,EAAE,CAACgB,KANZ;AAOE,QAAA,GAAG,EAAEhB,EAAE,CAACiB,GAPV;AAQE,QAAA,OAAO,EAAEjB,EAAE,CAACkB,OARd;AASE,QAAA,IAAI,EAAElB,EAAE,CAACmB,IATX;AAUE,QAAA,KAAK,EAAEnB,EAAE,CAACoB,KAVZ;AAWE,QAAA,MAAM,EAAExC,MAXV;AAYE,QAAA,YAAY,EAAEoB,EAAE,CAACqB;AAZnB,SACOlD,MAAM,EADb;AAAA;AAAA;AAAA;AAAA,cADD;AADH;AAAA;AAAA;AAAA;AAAA,YAvBF,eAyCE;AAAK,MAAA,SAAS,EAAC,MAAf;AAAA,8BACE;AAAQ,QAAA,OAAO,EAAE,MAAM;AACrB,cAAIW,KAAK,GAAG,CAAZ,EAAe;AACbC,YAAAA,QAAQ,CAACD,KAAK,GAAG,CAAT,CAAR;AACAM,YAAAA,UAAU,CAAClB,IAAD,EAAMY,KAAN,CAAV;AACD;AACF,SALD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAOE;AAAQ,QAAA,OAAO,EAAE,MAAM;AAAEC,UAAAA,QAAQ,CAACD,KAAK,GAAG,CAAT,CAAR;AAAqBM,UAAAA,UAAU,CAAClB,IAAD,EAAMY,KAAN,CAAV;AAAuB,SAArE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAPF;AAAA;AAAA;AAAA;AAAA;AAAA,YAzCF;AAAA,kBADK,gBAoDF,QAAC,SAAD;AAAW,IAAA,WAAW,EAAEE,WAAxB;AAAqC,IAAA,MAAM,EAAEL;AAA7C;AAAA;AAAA;AAAA;AAAA,UApDL;AAqDD,CArID;;GAAMJ,iB;;KAAAA,iB;AAuIN,eAAeA,iBAAf","sourcesContent":["import { useState ,useEffect} from \"react\";\r\nimport data from '../Data.json'\r\nimport { nanoid } from \"nanoid\";\r\nimport ResCard from \"./ResCard\";\r\nimport \"./ResDet.css\";\r\nimport SortNav from \"./Nav\";\r\nimport InputForm from \"./AddHotel\";\r\n\r\nconst RestaurantDetails = () => {\r\n  const [Game, setData] = useState(data);\r\n  const [val, setVal] = useState(false);\r\n  const [forTwo, setForTwo] = useState(false);\r\n  const [count, setCount] = useState(1);\r\n\r\n  const getFormData = (form) => {\r\n    setData([...Game, form]);\r\n\r\n  }\r\n\r\n  const getData = (curData) => {\r\n    setData([...curData]);\r\n    Pagination([...curData], count)\r\n  };\r\n\r\n  const l2h = () => {\r\n    let newData = Game.sort(\r\n      (a, b) => parseFloat(a.rating) - parseFloat(b.rating)\r\n    );\r\n    setData([...newData]);\r\n    Pagination(newData, count)\r\n  };\r\n\r\n  const h2l = () => {\r\n    let newData = Game.sort(\r\n      (a, b) => parseFloat(b.rating) - parseFloat(a.rating)\r\n    );\r\n    setData([...newData]);\r\n    Pagination(newData, count)\r\n  };\r\n\r\n  const Cash = (data) => {\r\n    let cashData = data\r\n      .filter((el) => el.payment_methods.cash===true)\r\n      .sort((a, b) => parseFloat(b.rating) - parseFloat(a.rating));\r\n    getData(cashData);\r\n    Pagination(cashData, count)\r\n  }\r\n  const Card = (data) => {\r\n    let cardData = data\r\n      .filter((el) => el.payment_methods.card===true)\r\n      .sort((a, b) => parseFloat(b.rating) - parseFloat(a.rating));\r\n    getData(cardData);\r\n    Pagination(cardData, count)\r\n  }\r\n  const All = (data) => {\r\n    let allData = data\r\n      .filter((el) => el.payment_methods.cash===true && el.payment_methods.card===true && el.payment_methods.upi === true)\r\n      .sort((a, b) => parseFloat(b.rating) - parseFloat(a.rating));\r\n    getData(allData);\r\n    Pagination(allData, count)\r\n  }\r\n\r\n    useEffect(() => { \r\n      Pagination(data, count)\r\n    }, [count])\r\n    \r\n    const Pagination = (data,count) => { \r\n      let pagData =data.filter((el, index )=>{\r\n        if (count === 1 && index <5) {\r\n          return el\r\n        }\r\n        if (count === 2 && index < 10 && index >4) {\r\n          return el\r\n        }\r\n        if (count === 3 && index < 15 && index>9) {\r\n          return el\r\n        }\r\n        if (count === 4 && index < 20 && index>14) {\r\n          return el\r\n        }\r\n      \r\n      })\r\n      setData([...pagData])\r\n      //console.log(pagData)\r\n    }\r\n \r\n  \r\n // Pagination(data,count)\r\n  return (!val) ? (\r\n    <>\r\n      <div className=\"searchNum\"><h1>{Game.length} Restaurants Details</h1></div>\r\n      <SortNav getData={getData} data={data} />\r\n      <div>\r\n        <div className=\"sort\">\r\n          <button onClick={l2h}>Low to High</button>\r\n          <button onClick={h2l}>High to Low</button>\r\n          <button onClick={() => setVal(true)}>Add Your Own RestaurantDetails</button>\r\n        </div>\r\n      </div>\r\n      <div>\r\n        <div className=\"sort\">\r\n          <button onClick={() => { setForTwo(true);l2h(); }}>Low to High For Two</button>\r\n          <button onClick={() => { setForTwo(true);h2l(); }}>High to Low For Two</button>\r\n        </div>\r\n      </div>\r\n      <div>\r\n        <div className=\"sort\">\r\n          <button onClick={()=>Cash(data)}>Cash</button>\r\n          <button onClick={()=>Card(data)}>Card</button>\r\n          <button onClick={()=>All(data)}>All</button>\r\n        </div>\r\n      </div>\r\n      <div className=\"card-container\">\r\n        {Game.map((el) => (\r\n          <ResCard\r\n            key={nanoid()}\r\n            name={el.name}\r\n            cat={el.cat}\r\n            cost={el.cost}\r\n            rating={el.rating}\r\n            image={el.image}\r\n            min={el.min}\r\n            reviews={el.reviews}\r\n            time={el.time}\r\n            votes={el.votes}\r\n            forTwo={forTwo}\r\n            cost_for_two={el.cost_for_two}\r\n          />\r\n        ))}\r\n      </div>\r\n      <div className=\"sort\">\r\n        <button onClick={() => {\r\n          if (count > 1) {\r\n            setCount(count - 1);\r\n            Pagination(data,count)\r\n          }\r\n        }}>Previous</button>\r\n        <button onClick={() => { setCount(count + 1); Pagination(data,count)}}>Next</button>\r\n        </div>\r\n    </>\r\n  ) : (<InputForm getFormData={getFormData} setVal={setVal } />)\r\n};\r\n\r\nexport default RestaurantDetails;\r\n"]},"metadata":{},"sourceType":"module"}